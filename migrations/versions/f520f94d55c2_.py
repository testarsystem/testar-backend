"""empty message

Revision ID: f520f94d55c2
Revises: 
Create Date: 2019-09-13 13:41:35.644757

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f520f94d55c2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group', sa.Integer(), nullable=True),
    sa.Column('entry', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_groups_entry'), 'groups_groups', ['entry'], unique=False)
    op.create_index(op.f('ix_groups_groups_group'), 'groups_groups', ['group'], unique=False)
    op.create_index(op.f('ix_groups_groups_id'), 'groups_groups', ['id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('pwd_hash', sa.String(), nullable=False),
    sa.Column('registered', sa.Float(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.Column('manager', sa.Boolean(), nullable=True),
    sa.Column('first_name', sa.String(length=20), nullable=False),
    sa.Column('last_name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_title'), 'group', ['title'], unique=False)
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_text'), 'question', ['text'], unique=False)
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_test_title'), 'test', ['title'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Float(), nullable=True),
    sa.Column('end_date', sa.Float(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_competition_end_date'), 'competition', ['end_date'], unique=False)
    op.create_index(op.f('ix_competition_start_date'), 'competition', ['start_date'], unique=False)
    op.create_index(op.f('ix_competition_title'), 'competition', ['title'], unique=False)
    op.create_table('questions_groups',
    sa.Column('question', sa.Integer(), nullable=False),
    sa.Column('group', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group'], ['group.id'], ),
    sa.ForeignKeyConstraint(['question'], ['question.id'], ),
    sa.PrimaryKeyConstraint('question', 'group')
    )
    op.create_table('test_questions',
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('test_id', 'question_id')
    )
    op.create_table('users_groups',
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('group', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user', 'group')
    )
    op.create_table('competition_participants',
    sa.Column('competition', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['competition'], ['competition.id'], ),
    sa.ForeignKeyConstraint(['user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('competition', 'user')
    )
    op.create_table('submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('competition_id', sa.Integer(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('submission')
    op.drop_table('competition_participants')
    op.drop_table('users_groups')
    op.drop_table('test_questions')
    op.drop_table('questions_groups')
    op.drop_index(op.f('ix_competition_title'), table_name='competition')
    op.drop_index(op.f('ix_competition_start_date'), table_name='competition')
    op.drop_index(op.f('ix_competition_end_date'), table_name='competition')
    op.drop_table('competition')
    op.drop_table('answers')
    op.drop_index(op.f('ix_test_title'), table_name='test')
    op.drop_table('test')
    op.drop_index(op.f('ix_question_text'), table_name='question')
    op.drop_table('question')
    op.drop_index(op.f('ix_group_title'), table_name='group')
    op.drop_table('group')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_groups_groups_id'), table_name='groups_groups')
    op.drop_index(op.f('ix_groups_groups_group'), table_name='groups_groups')
    op.drop_index(op.f('ix_groups_groups_entry'), table_name='groups_groups')
    op.drop_table('groups_groups')
    # ### end Alembic commands ###
